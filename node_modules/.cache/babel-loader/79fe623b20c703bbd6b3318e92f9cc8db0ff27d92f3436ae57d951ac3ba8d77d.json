{"ast":null,"code":"var _jsxFileName = \"D:\\\\FSACP\\\\FSACP\\\\weebay\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = username('');\n  const [error, setError] = useState(null);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('https://fakestoreapi.com/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to login');\n      }\n      const data = await response.json();\n      //assuming the response contains a token\n      const token = data.token;\n      console.log(token);\n      //you can now store the token in localStorage, state, or wherever you want\n    } catch (error) {\n      console.error('Error loggin in', error.message);\n      setError('Failed to login. Please check your credentials.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"nUaIPo2GnanJS6juyj4N+pqFkzE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","error","setError","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","token","console","log","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FSACP/FSACP/weebay/src/components/Login.js"],"sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Login () {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = username('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('https://fakestoreapi.com/auth/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password\r\n                })\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to login');\r\n            }\r\n            const data = await response.json();\r\n            //assuming the response contains a token\r\n            const token = data.token\r\n            console.log(token)\r\n            //you can now store the token in localStorage, state, or wherever you want\r\n            \r\n        } catch (error) {\r\n            console.error('Error loggin in', error.message);\r\n            setError('Failed to login. Please check your credentials.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,KAAKA,CAAA,EAAI;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBf,QAAQ;UACRE;QACJ,CAAC;MACL,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC;MACA,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK;MACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;IAEJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZiB,OAAO,CAACjB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACmB,OAAO,CAAC;MAC/ClB,QAAQ,CAAC,iDAAiD,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIR,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAAC5B,EAAA,CAtCQD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}