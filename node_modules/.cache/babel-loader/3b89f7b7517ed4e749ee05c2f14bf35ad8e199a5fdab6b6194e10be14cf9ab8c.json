{"ast":null,"code":"var _jsxFileName = \"D:\\\\FSACP\\\\FSACP\\\\weebay\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\n\n//create a new context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n//create a provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  //state to manage authentication status and username\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState('');\n\n  //function to set authentication state\n  const setAuthStatus = (status, user) => {\n    setIsAuthenticated(status);\n    setUsername(user);\n  };\n\n  //value object to be provided by the context\n  const authContextValue = {\n    isAuthenticated,\n    username,\n    setAuthStatus\n  };\n\n  //provide the value to the context\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NtU5HNFoC80BBXDacqvMTHd/xQ0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","username","setUsername","setAuthStatus","status","user","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FSACP/FSACP/weebay/src/components/AuthContext.js"],"sourcesContent":["import React, {createContext, useState} from \"react\";\r\n\r\n//create a new context\r\nexport const AuthContext = createContext();\r\n\r\n//create a provider component\r\nexport const AuthProvider = ({ children }) => {\r\n    //state to manage authentication status and username\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [ username, setUsername ] = useState('');\r\n\r\n    //function to set authentication state\r\n    const setAuthStatus = (status, user) => {\r\n        setIsAuthenticated(status);\r\n        setUsername(user);\r\n    };\r\n\r\n    //value object to be provided by the context\r\n    const authContextValue = {\r\n        isAuthenticated,\r\n        username,\r\n        setAuthStatus\r\n    };\r\n     \r\n    //provide the value to the context\r\n    return (\r\n        <AuthContext.Provider value={authContextValue}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,QAAO,OAAO;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAES,QAAQ,EAAEC,WAAW,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMW,aAAa,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;IACpCL,kBAAkB,CAACI,MAAM,CAAC;IAC1BF,WAAW,CAACG,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG;IACrBP,eAAe;IACfE,QAAQ;IACRE;EACJ,CAAC;;EAED;EACA,oBACIT,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAEF,gBAAiB;IAAAT,QAAA,EACzCA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAd,EAAA,CAxBYF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}